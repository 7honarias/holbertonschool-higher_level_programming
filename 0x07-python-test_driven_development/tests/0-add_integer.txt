0-add_integer Module:
=====================

Import "add_integer" from "0-add_integer" module

       >>> add_integer = __import__("0-add_integer").add_integer

Should return tha sum of two positive integers:

       >>> add_integer(1, 3)
       4

Negative number:

		>>> add_integer(-1,4)
		3

String and number:

		>>> add_integer("Holberton",2)
		Traceback (most recent call last):
		  ...
		TypeError: a must be an integer

flots sum:

		>>> add_integer(2.1, 2.3)
		4

empty 

		>>> add_integer(3)
		101

when pass None

		>>> add_integer(None)
		Traceback (most recent call last):
		...
		TypeError: a must be an integer

pep8

		>>> import os
		>>> os.popen("pep8 0-add_integer.py").read()
		''

Executable

		>>> os.access('0-add_integer', os.X_OK)
		False

last line

		>>os.popen('cat -e 0-add_integer.py | tail -1').read()[-1]
		'\n'

no number

		>>> print(add_integer(float('nan'), float('nan')))
		Traceback (most recent call last):
		...
		ValueError: cannot convert float NaN to integer

infinit numbers

		>>> print(add_integer(float('-inf'), float('-inf')))
		Traceback (most recent call last):
		OverflowError: cannot convert float infinity to integer

operations

		>>> print(add_integer(-1-2*4/5-40*2+1, -1-0))
		-82
