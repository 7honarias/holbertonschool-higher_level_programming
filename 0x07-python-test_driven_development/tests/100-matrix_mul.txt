== Matrimix multiplication ==
==========================
       IMPORT
==========================
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


========================================================
EDGE CASES
========================================================
Checking docstring mod:
    	>>> __import__('100-matrix_mul').__doc__ != None
   	True

	>>> matrix_mul([[]], [[1, 2], [2,1]])
	Traceback (most recent call last):
	....
	ValueError: m_a can't be empty


m_a is not a list

       >>> matrix_mul("Hello", [[1, 2], [2, 3]])
       Traceback (most recent call last):
       ....
       TypeError: m_a must be a list

m_b is not a list

       >>> matrix_mul([[1, 3, 5], [2, 3, 5]], 2)
       Traceback (most recent call last):
       ....
       TypeError: m_b must be a list

element of list is not a int or float

       >>> matrix_mul([[1, 2], [1, "hello"]],[[1,2], [3, 4]])
       Traceback (most recent call last):
       ....
       TypeError: m_a should contain only integers or floats

test missing one argument

       >>> matrix_mul([[1, 2], [3, 2]])
       Traceback (most recent call last):
       ....
       TypeError: matrix_mul() missing 1 required positional argument: 'm_b'


test correct output

       >>> matrix_mul([[1, 2],[3, 4]], [[5, 6], [7, 8]])
       [[19, 22], [43, 50]]

test correct output

       >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
       [[19, 22], [43, 50], [43, 50]]

test empty

       >>> matrix_mul([[5,6], [7, 8]], [[]])
       Traceback (most recent call last):
       ....
       ValueError: m_b can't be empty

test with list

       >>> matrix_mul([[1, 2], [2, 4]], [1, 2 ,3])
       Traceback (most recent call last):
       ....
       TypeError: m_a must be a list of lists

test word m_a

       >>> matrix_mul([[1, 2], [1, 3]], "Holberton")
       Traceback (most recent call last):
       ....
       TypeError: m_b must be a list

test string in m_b

       >>> matrix_mul([[1, 2], [1,3]], [[5, "6"], [7, 8]])
       Traceback (most recent call last):
       ....
       TypeError: m_b should contain only integers or floats


>>> matrix1 = [[1.0, 2.0, 3.0], [4.0, 5.0, -6.0],\
... [7.0, 8.0, -9.0], [10, 11, 12]]
>>> matrix2 = [[1.0, 2.0, 3.0], [4.0, 5.0, -6.0], [7.0, 8.0, -9.0]]

>>> print(matrix_mul())
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> print(matrix_mul(matrix1))
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix1 = [[1, 2, 3, 4], [4, 5, -6, 5], [7, 8, -9, 6]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix1 = [[1]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix1 = []
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a can't be empty

>>> matrix2 = []
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b can't be empty

>>> matrix1 = [[]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix2 = [[]]
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9, 10]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix1 = [[1, 2, 3], [4, 5, -6, 10], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix1 = ((1, 2, 3))
>>> matrix2 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix2 = ((1, 2, 3))
>>> matrix1 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix1 = None
>>> matrix2 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix2 = None
>>> matrix1 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix1 = 3.4
>>> matrix2 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix2 = 3.4
>>> matrix1 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix1 = 3
>>> matrix2 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix2 = 3
>>> matrix1 = [[1, 2, 3]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, "hi", -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, "hi", -9]]
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix1 = [[1, 2, 3], [4, None, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix2 = [[1, 2, 3], [4, None, -6], [7, 8, -9]]
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix1 = [[{1}, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix2 = [[{1}, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix1 = [[[1], 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix2 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix2 = [[[1], 2, 3], [4, 5, -6], [7, 8, -9]]
>>> matrix1 = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(matrix1, matrix2))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
